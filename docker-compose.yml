services:
  db:
    image: postgres:15.2-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - db-data:/var/lib/postgres/data
    networks:
      - result-tier
      - back-tier

# Db service for custom postgres image
#  db:
#    image: kaos-postgres
#    build:
#      context: ./postgres
#      args:
#        postgres_db: ${POSTGRES_DB}
#        postgres_user: ${POSTGRES_USER}
#        postgres_password: ${POSTGRES_PASSWORD}
#    restart: always
#    ports:
#      - "5432:5432"
#    volumes:
#      - db-data:/var/lib/postgres/data
#    networks:
#      - result-tier
#      - back-tier

  poll:
    image: kaos-poll
    build: ./poll
    restart: always
    depends_on:
      - redis
    ports:
      - "5000:80"
    env_file:
      - .env
    networks:
      - poll-tier

  redis:
    image: redis:7.0.8-alpine
    restart: always
    depends_on:
      - db
    ports:
      - "6379"
    networks:
      - poll-tier
      - back-tier

  worker:
    image: kaos-worker
    build: ./worker
    restart: always
    depends_on:
      - db
      - redis
    env_file:
      - .env
    networks:
      - back-tier

  result:
    image: kaos-result
    build: ./result
    restart: always
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "5001:80"
    networks:
      - result-tier

networks:
  poll-tier:
    driver: bridge
  result-tier:
    driver: bridge
  back-tier:
    driver: bridge

volumes:
  db-data:
    driver: local
